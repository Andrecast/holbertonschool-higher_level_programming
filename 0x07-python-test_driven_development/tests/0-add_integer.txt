=================================
Function that add integers
=================================

---------------------------------
Using function "add_integer"
---------------------------------

Import "add_integer" from the "0-add_integer" module:
    >>> add_integer = __import__('0-add_integer').add_integer

Check doscstring for module:
    >>> __import__('0-add_integer').__doc__ != None
    True

Check docstring for function:
    >>> len(add_integer.__doc__) > 0
    True

README Create and not empty:
    >>> import os
    >>> os.path.exists('README.md')
    True

Sheebang:
    >>> import os
    >>> os.popen("head -1 0-add_integer.py").read()
    '#!/usr/bin/python3\n'

PEP8:
	>>> import os
	>>> os.popen("pep8 0-add_integer.py").read()
	''

NEW_LINE AT THE END OF THE FILE
	>>> os.popen("cat -e 0-add_integer.py | tail -1").read()[-1]
	'\n'

Edge cases:

    >>> add_integer(9, 0)
    9

    >>> add_integer(-8, -1)
    -9

    >>> add_integer(-5.0, 10)
    5

    >>> add_integer(10.8, 4)
    14

    >>> add_integer(8)
    106

    >>> add_integer(4, "holberton")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer("hello", "world")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer()
    Traceback (most recent call last):
        ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer(x)
    Traceback (most recent call last):
    NameError: name 'x' is not defined

    >>> add_integer(False, 3)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer((0, 3), "hurry")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(-7.4, 'A')
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer